list.files()
unzip("Municipios.zip" )
unzip("Prestadores.zip")
library(readxl)
Municipios <- read_excel("Municipios.xlsx")
View(Municipios)
summary(Municipios)
Prestadores <- read_excel("Prestadores.xlsx")
Prestadores <- read_excel("Prestadores.xls")
Prestadores <- read_excel("Prestadores.xlsx")
summary(Prestadores)
names(Prestadores)
install.packages("RSQLite")
install.packages("DBI")
list.files()
library(DBI)
library(RSQLite)
# Conectar a una nueva base de datos SQLite
con <- dbConnect(RSQLite::SQLite(), "myDB.sqlite")
# Cargar datos como tablas en SQLite
dbWriteTable(con, "municipios", Municipios, overwrite = TRUE)
dbWriteTable(con, "prestadores", Prestadores, overwrite = TRUE)
summary(Municipios)
names(Prestadores)
View(Prestadores)
head(Prestadores,4)
library(dplyr)
Prestadores %>%
unique(departamento)
Prestadores %>%
unique(depa_nombre)
Prestadores %>%
distinct(depa_nombre)
Prestadores %>%
distinct(depa_nombre) %>%
count()
Prestadores %>%
distinct(depa_nombre, nombre_prestador) %>%
count()
Prestadores %>%
distinct(depa_nombre, nombre_prestador) %>%
count(depa_nombre, sort = TRUE)
Prestadores %>%
distinct(depa_nombre, nombre_prestador) %>%
count(depa_nombre)
Prestadores %>%
distinct(depa_nombre, nombre_prestador) %>%
count(depa_nombre) %>%
arrange(desc(n))
Prestadores %>%
distinct(depa_nombre, nombre_prestador) %>%
count(depa_nombre) %>%
arrange()
Prestadores %>%
distinct(depa_nombre, nombre_prestador) %>%
count(depa_nombre) %>%
arrange(n)
db_list_tables(con)
rm(list = ls())
con <- dbConnect(RSQLite::SQLite(), "myDB.sqlite")
db_list_tables(con)
dbListTables(con)
dbgetquery(con, "PRAGMA table_info(municipios)")
dbGetQuery(con, "PRAGMA table_info(municipios)")
dbGetQuery(con, "PRAGMA table_info(prestadores)")
mun_info <- dbGetQuery(con, "PRAGMA table_info(municipios)")
mun_info$name
mun_info$type
unique(mun_info$type)
library(DBI)
library(RSQLite)
library(dplyr)
dbGetQuery(con, "PRAGMA table_info(municipios)")
con <- dbConnect(RSQLite::SQLite(), "myDB.sqlite")
# Cargar datos de Municipios.xlsx a SQLite
Municipios <- read_excel("Municipios.xlsx")
library(DBI)
library(RSQLite)
library(dplyr)
library(readxl)
# Cargar datos de Municipios.xlsx a SQLite
Municipios <- read_excel("Municipios.xlsx")
Prestadores <- read_excel("Prestadores.xlsx")
# Cargar datos como tablas en SQLite
dbWriteTable(con, "municipios", Municipios, overwrite = TRUE)
dbWriteTable(con, "prestadores", Prestadores, overwrite = TRUE)
dbGetQuery(con, "PRAGMA table_info(municipios)")
dbGetQuery(con, "PRAGMA table_info(prestadores)")
dbGetQuery(con, "PRAGMA table_info(prestadores)")
query <- "
SELECT depa_nombre AS Departamento, muni_nombre AS Municipio, COUNT(*) AS Num_Prestadores
FROM prestadores
GROUP BY depa_nombre, muni_nombre
ORDER BY depa_nombre, muni_nombre
"
dbGetQuery(con, query)
View(Prestadores)
cod_municipios <- read.csv("C:/Users/lucas/Downloads/DIVIPOLA-_C_digos_municipios_20240709.csv", encoding="UTF-8")
View(cod_municipios)
rm(list = "cod_municipios")
cod_municipios <- read_excel("Clasificador_Geografico.xlsx")
rm(list = "cod_municipios")
library(readxl)
cod_municipios <- read_excel("Clasificador_Geografico.xlsx",
skip = 5)
View(cod_municipios)
table(prestadores$naju_nombre)
table(Prestadores$naju_nombre)
dbGetQuery(con, "PRAGMA table_info(cod_municipios)")
dbWriteTable(con, "cod_municipios", cod_municipios, overwrite = TRUE)
dbGetQuery(con, "PRAGMA table_info(cod_municipios)")
View(Municipios)
View(cod_municipios)
dbGetQuery(con, "PRAGMA table_info(municipios)")
View(cod_municipios)
library(dplyr)
cod_municipios %>%
count(codigo_municipio, `Nombre Centro Poblado`)
cod_municipios %>%
count(`Código Municipio`, `Nombre Centro Poblado`)
cod_municipios %>%
count(`Código Municipio`, `Nombre Centro Poblado`) %>%
arrange(desc(n))
cod_municipios %>%
count(`Código Municipio`, `Tipo Centro Poblado`) %>%
arrange(desc(n))
table(cod_municipios$`Tipo Centro Poblado`)
cod_municipios %>%
filter(`Tipo Centro Poblado` == "CABECERA MUNICIPAL (CM)") %>%
count(`Código Municipio`, `Tipo Centro Poblado`) %>%
arrange(desc(n))
# Consulta para filtrar por Tipo Centro Poblado == "Cabecera Municipal (CM)"
query <- "
SELECT *
FROM cod_municipios
WHERE `Tipo Centro Poblado` = 'Cabecera Municipal (CM)'
"
# Ejecutar la consulta y obtener los resultados
result_filt1 <- dbGetQuery(con, query)
# Consulta para filtrar los municipios que no están en la tabla 'Municipios'
query <- "
SELECT cm.*
FROM cod_municipios cm
LEFT JOIN municipios m ON cm.`Código Municipio` = m.Depmun
WHERE m.Depmun IS NULL
"
# Ejecutar la consulta y obtener los resultados
result_filt2 <- dbGetQuery(con, query)
# Consulta para hacer un inner join entre cod_municipios y Municipios usando Depmun - Código Municipio
query <- "
SELECT cm.*, m.*
FROM cod_municipios cm
JOIN municipios m ON cm.`Código Municipio` = m.Depmun
"
dbGetQuery(con, query)
dbGetQuery(con, query)
query <- "
SELECT `Código Municipio` AS 'cod_municipio',`Nombre Departamento` AS 'nom_dpto', `Nombre Municipio` AS 'nom_municipio' ,`Tipo Centro Poblado` AS 'tipo_centro_poblado'
FROM cod_municipios
WHERE `Tipo Centro Poblado` = 'Cabecera Municipal (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT `Código Municipio` AS cod_municipio, `Nombre Departamento` AS nom_dpto, `Nombre Municipio` AS nom_municipio, `Tipo Centro Poblado` AS tipo_centro_poblado
FROM cod_municipios
WHERE `Tipo Centro Poblado` = 'Cabecera Municipal (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT `Código Municipio` AS cod_municipio, `Nombre Departamento` AS nom_dpto, `Nombre Municipio` AS nom_municipio, `Tipo Centro Poblado` AS tipo_centro_poblado
FROM cod_municipios
WHERE tipo_centro_poblado = 'Cabecera Municipal (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT `Código Municipio` AS cod_municipio, `Nombre Departamento` AS nom_dpto, `Nombre Municipio` AS nom_municipio, `Tipo Centro Poblado` AS tipo_centro_poblado
FROM cod_municipios
"
dbGetQuery(con, query)
names(cod_municipios)
query <- "
SELECT `Código Municipio` AS cod_municipio, `Nombre Departamento` AS nom_dpto,
`Nombre Municipio` AS nom_municipio, `Tipo Centro Poblado` AS tipo_centro_poblado,
Longitud, Latitud
FROM cod_municipios
"
dbGetQuery(con, query)
query <- "
SELECT `Código Municipio` AS cod_municipio, `Nombre Departamento` AS nom_dpto,
`Nombre Municipio` AS nom_municipio, `Tipo Centro Poblado` AS tipo_centro_poblado,
Longitud, Latitud
FROM cod_municipios
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT cm.`Código Municipio` AS cod_municipio,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud
FROM cod_municipios cm
WHERE cm.tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT cm.`Código Municipio` AS cod_municipio,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud
FROM cod_municipios cm
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT cm.`Código Municipio` AS cod_municipio,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud
FROM cod_municipios cm
JOIN municipios m ON cm.cod_municipio = m.Depmun
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT cm.`Código Municipio` AS cod_municipio,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud
FROM cod_municipios cm
JOIN municipios m ON cod_municipio = m.Depmun
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT cm.`Código Municipio` AS cod_municipio,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud,
m.Depmun AS cod_municipio,
m.Superficie,
m.Poblacion,
m.Region
FROM municipios m
LEFT JOIN cod_municipios cm ON cod_municipio
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT m.Depmun AS cod_municipio,
m.Superficie,
m.Poblacion,
m.Region,
cm.`Código Municipio` AS cod_municipio,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud
FROM municipios m
LEFT JOIN cod_municipios cm ON cod_municipio
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
View(Municipios)
query <- "
SELECT m.Depmun AS cod_municipio,
m.Superficie,
m.Poblacion,
m.Region,
cm.`Código Municipio` AS cod_municipio,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud
FROM municipios m
LEFT JOIN cod_municipios cm ON cod_municipio = cod_municipio
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT m.Depmun AS cod_municipio,
m.Superficie,
m.Poblacion,
m.Region,
cm.`Código Municipio` AS cod_municipio,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud
FROM municipios m
LEFT JOIN cod_municipios cm ON m.cod_municipio = cm.cod_municipio
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT m.Depmun AS cod_municipio,
m.Superficie,
m.Poblacion,
m.Region,
cm.`Código Municipio` AS cod_municipio,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud
FROM municipios m
LEFT JOIN cod_municipios cm ON cod_municipio = cm.cod_municipio
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT m.Depmun AS cod_municipio,
m.Superficie,
m.Poblacion,
m.Region,
cm.`Código Municipio` AS cod_municipio2,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud
FROM municipios m
LEFT JOIN cod_municipios cm ON cod_municipio = cm.cod_municipio2
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
query <- "
SELECT m.Depmun AS cod_municipio,
m.Superficie,
m.Poblacion,
m.Region,
cm.`Código Municipio` AS cod_municipio2,
cm.`Nombre Departamento` AS nom_dpto,
cm.`Nombre Municipio` AS nom_municipio,
cm.`Tipo Centro Poblado` AS tipo_centro_poblado,
cm.Longitud,
cm.Latitud
FROM municipios m
LEFT JOIN cod_municipios cm ON cod_municipio = cod_municipio2
WHERE tipo_centro_poblado = 'CABECERA MUNICIPAL (CM)'
"
dbGetQuery(con, query)
info_municipios <- dbGetQuery(con, query)
query2 <- paste0("
SELECT LOWER(unaccent(p.muni_nombre)) AS nom_municipio,
p.clpr_nombre AS tipo_profesional,
p.habilitado,
p.clase_persona,
p.naju_nombre,
t2.*
FROM prestadores p
LEFT JOIN (",query,") t2 ON  nom_municipio = t2.nom_municipio
WHERE m.Depmun IS NULL
")
dbGetQuery(con, query2)
cod_municipios %>%
mutate(nom_municipio = tolower(unaccent(`Nombre Municipio`)))
library(stringr)
libary(stringi)
library(stringi)
cod_municipios %>%
mutate(nom_municipio = stri_trans_general(`Nombre Municipio`))
cod_municipios %>%
mutate(`Nombre Municipio` = stri_trans_general(`Nombre Municipio`))
cod_municipios %>%
mutate(`Nombre Municipio` = stri_trans_general(`Nombre Municipio`,"Latin-ASCII"))
cod_municipios <-cod_municipios %>%
mutate(`Nombre Municipio` = stri_trans_general(`Nombre Municipio`,"Latin-ASCII"))
dbWriteTable(con, "cod_municipios", cod_municipios, overwrite = TRUE)
query2 <- paste0("
SELECT p.muni_nombre AS nom_municipio,
p.clpr_nombre AS tipo_profesional,
p.habilitado,
p.clase_persona,
p.naju_nombre,
t2.*
FROM prestadores p
LEFT JOIN (",query,") t2 ON  nom_municipio = t2.nom_municipio
")
dbGetQuery(con, query2)
table(Prestadores$clpr_nombre)
names(Prestadores)
Prestadores %>%
select(depa_nombre, muni_nombre, clpr_nombre, habilitado, clase_persona, naju_nombre)
Prestadores %>%
select(depa_nombre, muni_nombre, clpr_nombre, habilitado, clase_persona, naju_nombre) %>%
spread(clpr_nombre, clpr_nombre, fill = NA)
library(tidyr)
Prestadores %>%
select(depa_nombre, muni_nombre, clpr_nombre, habilitado, clase_persona, naju_nombre) %>%
pivot_wider(names_from = c("clpr_nombre", "habilitado", "clase_persona", "naju_nombre"),
values_from = c("clpr_nombre", "habilitado", "clase_persona", "naju_nombre"),
values_fill = NA)
Prestadores %>%
select(depa_nombre, muni_nombre, clpr_nombre, habilitado, clase_persona, naju_nombre) %>%
pivot_wider(names_from = c("clpr_nombre", "habilitado", "clase_persona", "naju_nombre"),
values_fill = NA)
Prestadores <- Prestadores %>%
select(depa_nombre, muni_nombre, clpr_nombre, habilitado, clase_persona, naju_nombre)
Prestadores <- read_excel("Prestadores.xlsx")
Prestadores <- read_excel("Prestadores.xlsx")
# Cargar datos como tablas en SQLite
dbWriteTable(con, "municipios", Municipios, overwrite = TRUE)
dbWriteTable(con, "prestadores", Prestadores, overwrite = TRUE)
dbWriteTable(con, "cod_municipios", cod_municipios, overwrite = TRUE)
